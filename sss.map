{"version":3,"file":"sss","sources":["src/EventEmitter.ts"],"sourcesContent":["/*\n * Description: 自定义时间\n * File Created:  20st June 2023 19:34:12 pm\n * Author: shiqin\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n// type Empty = (...args: any[]) => void;\nexport type EventHandler = (...args: any[]) => void;\n\n/**\n * 事件列表\n * @private\n * @interface EventList\n */\ninterface EventList {\n  [key: string]: EventHandler[];\n}\n\n/**\n * 自定义事件\n *\n * @export\n * @class EventEmitter\n */\nexport class EventEmitter {\n  /**\n   * 事件列表\n   *\n   * @private\n   * @type {EventList}\n   * @memberof EventEmitter\n   */\n  private readonly events: EventList = {};\n\n  /**\n   * 绑定自定义事件\n   *\n   * @param {string} event 事件类型\n   * @param {EventHandler} handler 执行函数\n   * @return {EventEmitter}  {EventEmitter}\n   * @memberof EventEmitter\n   * @example\n   * // 单个事件\n   * this.on('myEvent', (event) => {\n   *  console.log(event)\n   * })\n   * // 多个事件\n   * this.on('myEvent, otherEvent', (event) =>{\n   *  console.log(event)\n   * })\n   */\n  on(events: string, handler: EventHandler): void {\n    this.each(events, (event) => {\n      if (Object.prototype.hasOwnProperty.call(this.events, event)) {\n        this.events[event].push(handler as EventHandler);\n      } else {\n        this.events[event] = [handler as EventHandler];\n      }\n    });\n  }\n\n  /**\n   * 触发自定义事件\n   *\n   * @param {string} event 事件类型\n   * @param {...any[]} args 参数\n   * @return {EventEmitter}  {EventEmitter}\n   * @memberof EventEmitter\n   * @example\n   * this.emit('myEvent', '传递的参数')\n   */\n  emit(events: string, ...args: unknown[]): void {\n    this.each(events, (event) => {\n      if (Object.prototype.hasOwnProperty.call(this.events, event)) {\n        this.events[event].forEach((handler) => {\n          handler(...args);\n        });\n      }\n    });\n  }\n\n  /**\n   * 解绑事件函数\n   *\n   * @param {string} event 事件类型\n   * @param {EventHandler} handler 执行函数\n   * @return {EventEmitter}  {EventEmitter}\n   * @memberof EventEmitter\n   * @example\n   * const handler = () => {}\n   * this.on('myEvent', handler)\n   * this.off('myEvent', handler)\n   */\n  off(events: string, handler: EventHandler): void {\n    this.each(events, (event) => {\n      if (Object.prototype.hasOwnProperty.call(this.events, event)) {\n        this.events[event] = this.events[event].filter((item) => handler !== item);\n      }\n    });\n  }\n  /**\n   * 支持多个事件绑定\n   *\n   * @private\n   * @param {string} events\n   * @param {callbackFuncion} handler\n   * @memberof EventEmitter\n   */\n  private each(events: string, handler: (event: string) => void): void {\n    events.split(',').forEach((event) => {\n      handler(event.trim());\n    });\n  }\n}\n"],"names":["EventEmitter","_classCallCheck","_defineProperty","_createClass","key","value","on","events","handler","_this","each","event","Object","prototype","hasOwnProperty","call","push","emit","_this2","_len","arguments","length","args","Array","_key","forEach","apply","off","_this3","filter","item","split","trim"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,IAAaA,YAAY,gBAAA,YAAA;AAAA,EAAA,SAAAA,YAAA,GAAA;AAAAC,IAAAA,eAAA,OAAAD,YAAA,CAAA,CAAA;AACvB;AACF;AACA;AACA;AACA;AACA;AACA;IANEE,eAAA,CAAA,IAAA,EAAA,QAAA,EAOqC,EAAE,CAAA,CAAA;AAAA,GAAA;AAAAC,EAAAA,YAAA,CAAAH,YAAA,EAAA,CAAA;IAAAI,GAAA,EAAA,IAAA;IAAAC,KAAA;AAEvC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,IAAA,SAAAC,EAAGC,CAAAA,MAAc,EAAEC,OAAqB,EAAQ;AAAA,MAAA,IAAAC,KAAA,GAAA,IAAA,CAAA;AAC9C,MAAA,IAAI,CAACC,IAAI,CAACH,MAAM,EAAE,UAACI,KAAK,EAAK;AAC3B,QAAA,IAAIC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACN,KAAI,CAACF,MAAM,EAAEI,KAAK,CAAC,EAAE;UAC5DF,KAAI,CAACF,MAAM,CAACI,KAAK,CAAC,CAACK,IAAI,CAACR,OAAuB,CAAC,CAAA;AAClD,SAAC,MAAM;UACLC,KAAI,CAACF,MAAM,CAACI,KAAK,CAAC,GAAG,CAACH,OAAO,CAAiB,CAAA;AAChD,SAAA;AACF,OAAC,CAAC,CAAA;AACJ,KAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATE,GAAA,EAAA;IAAAJ,GAAA,EAAA,MAAA;AAAAC,IAAAA,KAAA,EAUA,SAAAY,IAAKV,CAAAA,MAAc,EAA4B;AAAA,MAAA,IAAAW,MAAA,GAAA,IAAA,CAAA;MAAA,KAAAC,IAAAA,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAvBC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAK,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA,EAAA,EAAA;AAAJF,QAAAA,IAAI,CAAAE,IAAA,GAAAJ,CAAAA,CAAAA,GAAAA,SAAA,CAAAI,IAAA,CAAA,CAAA;AAAA,OAAA;AAC1B,MAAA,IAAI,CAACd,IAAI,CAACH,MAAM,EAAE,UAACI,KAAK,EAAK;AAC3B,QAAA,IAAIC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACG,MAAI,CAACX,MAAM,EAAEI,KAAK,CAAC,EAAE;UAC5DO,MAAI,CAACX,MAAM,CAACI,KAAK,CAAC,CAACc,OAAO,CAAC,UAACjB,OAAO,EAAK;AACtCA,YAAAA,OAAO,CAAAkB,KAAA,CAAIJ,KAAAA,CAAAA,EAAAA,IAAI,CAAC,CAAA;AAClB,WAAC,CAAC,CAAA;AACJ,SAAA;AACF,OAAC,CAAC,CAAA;AACJ,KAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXE,GAAA,EAAA;IAAAlB,GAAA,EAAA,KAAA;AAAAC,IAAAA,KAAA,EAYA,SAAAsB,GAAAA,CAAIpB,MAAc,EAAEC,OAAqB,EAAQ;AAAA,MAAA,IAAAoB,MAAA,GAAA,IAAA,CAAA;AAC/C,MAAA,IAAI,CAAClB,IAAI,CAACH,MAAM,EAAE,UAACI,KAAK,EAAK;AAC3B,QAAA,IAAIC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACa,MAAI,CAACrB,MAAM,EAAEI,KAAK,CAAC,EAAE;AAC5DiB,UAAAA,MAAI,CAACrB,MAAM,CAACI,KAAK,CAAC,GAAGiB,MAAI,CAACrB,MAAM,CAACI,KAAK,CAAC,CAACkB,MAAM,CAAC,UAACC,IAAI,EAAA;YAAA,OAAKtB,OAAO,KAAKsB,IAAI,CAAA;WAAC,CAAA,CAAA;AAC5E,SAAA;AACF,OAAC,CAAC,CAAA;AACJ,KAAA;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AAPE,GAAA,EAAA;IAAA1B,GAAA,EAAA,MAAA;AAAAC,IAAAA,KAAA,EAQA,SAAAK,IAAAA,CAAaH,MAAc,EAAEC,OAAgC,EAAQ;MACnED,MAAM,CAACwB,KAAK,CAAC,GAAG,CAAC,CAACN,OAAO,CAAC,UAACd,KAAK,EAAK;AACnCH,QAAAA,OAAO,CAACG,KAAK,CAACqB,IAAI,EAAE,CAAC,CAAA;AACvB,OAAC,CAAC,CAAA;AACJ,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,EAAA,OAAAhC,YAAA,CAAA;AAAA,CAAA;;;;"}